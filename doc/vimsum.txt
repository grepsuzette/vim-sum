*vimsum.txt*  Sum numbers in select or operator-pending mode

Author:  GrepSuzette (https://github.com/grepsuzette/vim-sum)
License: Public domain

Ever used vim-textobj-word-column and selected a column of numbers (viC) that you
wanted to add together? All this plugin does is that: summing numbers in
a visual selection or using operator-pending mode.

Default mappings are NOT defined because each person will want to use her own
mappings. You will need to add something like this in your .vimrc file:

    nmap <Leader>a <Plug>VimSumOperatorPending
    vmap <Leader>a <Plug>VimSumVisual

I personnaly use <A-a> for vim-sequence and <A-A> for vim-sum.

                                                *vimsum-examples*

Suppose you have a file containing such a table and you want the sum:

    |Item        Price       Description
    -------------------------------------------
    Chair       143         A magnificient chair
    Table       250         A decent table
    Lamp        9.8         A terrible lamp
    Beer        2.3         A not-so-free beer

You have different methods for calculating that sum:

    - CTRL-V and select an area with the numbers, then press <Leader>a.
    - <Leader>a directly, putting you in operator-pending mode, then
        either G (till end of file), or 5j or } (end of paragraph),
    - V5j <Leader>a
    - If you use textobj-word-column, placing yourself on a number, then
      viC (visual in whole column) and <Leader>a

Numbers used in the calculation are highlighted so you can check everything
went well.

Finally the sum (405.5) will be echoed in the status bar, and copied into 
the unnamed register. You can paste it anywhere you like using 'p' or your
favorite way.


                                                *vimsum-valid-numbers*

Numbers should be separated by spaces or end of line. 
Here are some examples that will be recognized:

>    52         A positive integer
>    92.25      A float
>    .525       A number without a leading zero
>    -.226      A negative number
>    92,25      A float using a comma, not a dot (as used by french and others)

The following are NOT supported for the time being:

>    Scientific numbers such as 42.352e23
>    Hexadecimal, octal, binary numbers (Would be nice though) 
>    Numbers not separated by a space, this is to minimize risks of error e.g.:
>    45min    will be discarded, because the number does not stand alone
>    100-35   will be discarded for similar reason. 100 -35 will work
>    1. 2. 3. will all be discarded, so as not to confuse them with list 
>             items (.1 is accepted)

                                                *vimsum-hiding*

To hide highlighted numbers, use `:match None`.

 vim:tw=78:et:ft=help:norl:
